<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="2" failures="3" skipped="0" tests="5" time="1.311" timestamp="2025-05-29T06:55:00.503705-04:00" hostname="DESKTOP-FFTTCN7"><testcase classname="tests.integration.test_commands.TestLoginCommand" name="test_login_success" time="0.010"><failure message="assert 2 == 0&#10; +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code">/opt/aeo/mgit/tests/integration/test_commands.py:32: in test_login_success
    assert result.exit_code == 0
E   assert 2 == 0
E    +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code</failure></testcase><testcase classname="tests.integration.test_commands.TestLoginCommand" name="test_login_invalid_credentials" time="0.006"><failure message="assert 2 == 1&#10; +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code">/opt/aeo/mgit/tests/integration/test_commands.py:52: in test_login_invalid_credentials
    assert result.exit_code == 1
E   assert 2 == 1
E    +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code</failure></testcase><testcase classname="tests.integration.test_commands.TestLoginCommand" name="test_login_from_env_vars" time="0.263"><failure message="AssertionError: assert 'Successfully authenticated' in '✓ Successfully connected to azuredevops provider\n'&#10; +  where '✓ Successfully connected to azuredevops provider\n' = &lt;Result okay&gt;.stdout">/opt/aeo/mgit/tests/integration/test_commands.py:68: in test_login_from_env_vars
    assert "Successfully authenticated" in result.stdout
E   AssertionError: assert 'Successfully authenticated' in '✓ Successfully connected to azuredevops provider\n'
E    +  where '✓ Successfully connected to azuredevops provider\n' = &lt;Result okay&gt;.stdout</failure></testcase><testcase classname="tests.integration.test_commands.TestCloneAllCommand" name="test_clone_all_success" time="0.001"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/integration/test_commands.py, line 75&#10;      def test_clone_all_success(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):&#10;E       fixture 'mock_azure_repos' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/integration/test_commands.py:75&quot;">file /opt/aeo/mgit/tests/integration/test_commands.py, line 75
      def test_clone_all_success(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):
E       fixture 'mock_azure_repos' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/integration/test_commands.py:75</error></testcase><testcase classname="tests.integration.test_commands.TestCloneAllCommand" name="test_clone_all_with_concurrency" time="0.001"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/integration/test_commands.py, line 100&#10;      def test_clone_all_with_concurrency(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):&#10;E       fixture 'mock_azure_repos' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/integration/test_commands.py:100&quot;">file /opt/aeo/mgit/tests/integration/test_commands.py, line 100
      def test_clone_all_with_concurrency(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):
E       fixture 'mock_azure_repos' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/integration/test_commands.py:100</error></testcase></testsuite></testsuites>