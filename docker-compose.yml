# Docker Compose configuration for mgit development and production
version: '3.8'

services:
  # Main mgit application service
  mgit:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE:-}
        - VCS_REF=${VCS_REF:-}
        - MGIT_VERSION=${MGIT_VERSION:-0.2.1}
    image: mgit:${MGIT_VERSION:-latest}
    container_name: mgit-app
    restart: unless-stopped
    
    # Environment configuration
    environment:
      # mgit-specific environment variables
      - MGIT_CONFIG_DIR=/home/mgit/.mgit
      - MGIT_DATA_DIR=/app/data
      - MGIT_LOG_LEVEL=${MGIT_LOG_LEVEL:-INFO}
      - MGIT_DEFAULT_CONCURRENCY=${MGIT_DEFAULT_CONCURRENCY:-5}
      
      # Azure DevOps configuration (from .env file)
      - AZURE_DEVOPS_ORG_URL=${AZURE_DEVOPS_ORG_URL:-}
      - AZURE_DEVOPS_PAT=${AZURE_DEVOPS_PAT:-}
      
      # GitHub configuration (from .env file)
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - GITHUB_ORG=${GITHUB_ORG:-}
      
      # Bitbucket configuration (from .env file)
      - BITBUCKET_USERNAME=${BITBUCKET_USERNAME:-}
      - BITBUCKET_APP_PASSWORD=${BITBUCKET_APP_PASSWORD:-}
      - BITBUCKET_WORKSPACE=${BITBUCKET_WORKSPACE:-}
      
      # General configuration
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - TZ=${TZ:-UTC}
    
    # Volume mounts for persistent data
    volumes:
      # Configuration directory (persistent)
      - mgit-config:/home/mgit/.mgit
      # Data directory for repositories and temporary files
      - mgit-data:/app/data
      # Host directory for repositories (optional, for development)
      - ${HOST_REPOS_DIR:-./repos}:/app/repos
      # Git configuration from host (optional)
      - ${HOME}/.gitconfig:/home/mgit/.gitconfig:ro
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.25'
    
    # Health check configuration
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Network configuration
    networks:
      - mgit-network
    
    # Read-only root filesystem for security (disabled for testing)
    # read_only: true
    
    # Temporary filesystems for writable areas
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
      - /var/tmp:rw,noexec,nosuid,size=50m
    
    # Default command (can be overridden)
    command: ["--help"]
    
    # User specification
    user: "1001:1001"
    
    # Working directory
    working_dir: /app

  # Development service with additional tools
  mgit-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder  # Use builder stage for development
      args:
        - BUILD_DATE=${BUILD_DATE:-}
        - VCS_REF=${VCS_REF:-}
        - MGIT_VERSION=${MGIT_VERSION:-0.2.1}
    image: mgit:dev-${MGIT_VERSION:-latest}
    container_name: mgit-dev
    profiles:
      - dev  # Only start with --profile dev
    
    environment:
      # Development-specific environment
      - MGIT_CONFIG_DIR=/home/mgit/.mgit
      - MGIT_DATA_DIR=/app/data
      - MGIT_LOG_LEVEL=DEBUG
      - MGIT_DEV_MODE=true
      - PYTHONPATH=/app
    
    volumes:
      # Mount source code for development
      - .:/app
      - mgit-dev-config:/home/mgit/.mgit
      - mgit-dev-data:/app/data
      - ${HOST_REPOS_DIR:-./repos}:/app/repos
      - ${HOME}/.gitconfig:/home/mgit/.gitconfig:ro
    
    # Override entrypoint for development
    entrypoint: ["/bin/bash"]
    command: ["-c", "tail -f /dev/null"]  # Keep container running
    
    networks:
      - mgit-network
    
    # Remove read-only restriction for development
    read_only: false

# Named volumes for data persistence
volumes:
  mgit-config:
    driver: local
    name: mgit-config
  mgit-data:
    driver: local
    name: mgit-data
  mgit-dev-config:
    driver: local
    name: mgit-dev-config
  mgit-dev-data:
    driver: local
    name: mgit-dev-data

# Network configuration
networks:
  mgit-network:
    driver: bridge
    name: mgit-network