<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="8" failures="24" skipped="2" tests="84" time="2.146" timestamp="2025-05-29T06:53:43.488988-04:00" hostname="DESKTOP-FFTTCN7"><testcase classname="tests.integration.test_commands.TestLoginCommand" name="test_login_success" time="0.013"><failure message="assert 2 == 0&#10; +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code">E   assert 2 == 0
     +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code</failure></testcase><testcase classname="tests.integration.test_commands.TestLoginCommand" name="test_login_invalid_credentials" time="0.008"><failure message="assert 2 == 1&#10; +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code">E   assert 2 == 1
     +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code</failure></testcase><testcase classname="tests.integration.test_commands.TestLoginCommand" name="test_login_from_env_vars" time="0.316"><failure message="AssertionError: assert 'Successfully authenticated' in '✓ Successfully connected to azuredevops provider\n'&#10; +  where '✓ Successfully connected to azuredevops provider\n' = &lt;Result okay&gt;.stdout">E   AssertionError: assert 'Successfully authenticated' in '✓ Successfully connected to azuredevops provider\n'
     +  where '✓ Successfully connected to azuredevops provider\n' = &lt;Result okay&gt;.stdout</failure></testcase><testcase classname="tests.integration.test_commands.TestCloneAllCommand" name="test_clone_all_success" time="0.001"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/integration/test_commands.py, line 75&#10;      def test_clone_all_success(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):&#10;E       fixture 'mock_azure_repos' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/integration/test_commands.py:75&quot;">file /opt/aeo/mgit/tests/integration/test_commands.py, line 75
      def test_clone_all_success(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):
E       fixture 'mock_azure_repos' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/integration/test_commands.py:75</error></testcase><testcase classname="tests.integration.test_commands.TestCloneAllCommand" name="test_clone_all_with_concurrency" time="0.001"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/integration/test_commands.py, line 100&#10;      def test_clone_all_with_concurrency(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):&#10;E       fixture 'mock_azure_repos' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/integration/test_commands.py:100&quot;">file /opt/aeo/mgit/tests/integration/test_commands.py, line 100
      def test_clone_all_with_concurrency(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):
E       fixture 'mock_azure_repos' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/integration/test_commands.py:100</error></testcase><testcase classname="tests.integration.test_commands.TestCloneAllCommand" name="test_clone_all_skip_existing" time="0.001"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/integration/test_commands.py, line 123&#10;      def test_clone_all_skip_existing(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):&#10;E       fixture 'mock_azure_repos' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/integration/test_commands.py:123&quot;">file /opt/aeo/mgit/tests/integration/test_commands.py, line 123
      def test_clone_all_skip_existing(self, cli_runner, temp_dir, mock_azure_repos, monkeypatch):
E       fixture 'mock_azure_repos' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestCloneAllCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/integration/test_commands.py:123</error></testcase><testcase classname="tests.integration.test_commands.TestPullAllCommand" name="test_pull_all_success" time="0.250"><failure message="assert 'Pulling updates' in &quot;INFO     Found 0 repositories in project 'test-project'.                        \nINFO     No repositories found in project 'test-project'.                       \n&quot;&#10; +  where &quot;INFO     Found 0 repositories in project 'test-project'.                        \nINFO     No repositories found in project 'test-project'.                       \n&quot; = &lt;Result okay&gt;.stdout">E   assert 'Pulling updates' in "INFO     Found 0 repositories in project 'test-project'.                        \nINFO     No repositories found in project 'test-project'.                       \n"
     +  where "INFO     Found 0 repositories in project 'test-project'.                        \nINFO     No repositories found in project 'test-project'.                       \n" = &lt;Result okay&gt;.stdout</failure></testcase><testcase classname="tests.integration.test_commands.TestPullAllCommand" name="test_pull_all_with_errors" time="0.247"><failure message="assert 'Error pulling' in &quot;INFO     Found 0 repositories in project 'test-project'.                        \nINFO     No repositories found in project 'test-project'.                       \n&quot;&#10; +  where &quot;INFO     Found 0 repositories in project 'test-project'.                        \nINFO     No repositories found in project 'test-project'.                       \n&quot; = &lt;Result okay&gt;.stdout">E   assert 'Error pulling' in "INFO     Found 0 repositories in project 'test-project'.                        \nINFO     No repositories found in project 'test-project'.                       \n"
     +  where "INFO     Found 0 repositories in project 'test-project'.                        \nINFO     No repositories found in project 'test-project'.                       \n" = &lt;Result okay&gt;.stdout</failure></testcase><testcase classname="tests.integration.test_commands.TestConfigCommand" name="test_config_show" time="0.001"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/integration/test_commands.py, line 217&#10;      def test_config_show(self, cli_runner, mock_config, temp_dir, monkeypatch):&#10;E       fixture 'mock_config' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestConfigCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/integration/test_commands.py:217&quot;">file /opt/aeo/mgit/tests/integration/test_commands.py, line 217
      def test_config_show(self, cli_runner, mock_config, temp_dir, monkeypatch):
E       fixture 'mock_config' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestConfigCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/integration/test_commands.py:217</error></testcase><testcase classname="tests.integration.test_commands.TestConfigCommand" name="test_config_set_value" time="0.006"><failure message="assert 2 == 0&#10; +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code">E   assert 2 == 0
     +  where 2 = &lt;Result SystemExit(2)&gt;.exit_code</failure></testcase><testcase classname="tests.integration.test_commands.TestGenerateEnvCommand" name="test_generate_env_success" time="0.001"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/integration/test_commands.py, line 251&#10;      def test_generate_env_success(self, cli_runner, mock_config, temp_dir, monkeypatch):&#10;E       fixture 'mock_config' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestGenerateEnvCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/integration/test_commands.py:251&quot;">file /opt/aeo/mgit/tests/integration/test_commands.py, line 251
      def test_generate_env_success(self, cli_runner, mock_config, temp_dir, monkeypatch):
E       fixture 'mock_config' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/integration/test_commands.py::&lt;event_loop&gt;, tests/integration/test_commands.py::TestGenerateEnvCommand::&lt;event_loop&gt;, tests/integration::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/integration/test_commands.py:251</error></testcase><testcase classname="tests.integration.test_commands.TestGenerateEnvCommand" name="test_generate_env_existing_file" time="0.005"><failure message="AssertionError: assert ('already exists' in '✓ Created .env.sample with detailed configuration options.\n' or 'Generated .env file' in '✓ Created .env.sample with detailed configuration options.\n')&#10; +  where '✓ Created .env.sample with detailed configuration options.\n' = &lt;Result okay&gt;.stdout&#10; +  and   '✓ Created .env.sample with detailed configuration options.\n' = &lt;Result okay&gt;.stdout">E   AssertionError: assert ('already exists' in '✓ Created .env.sample with detailed configuration options.\n' or 'Generated .env file' in '✓ Created .env.sample with detailed configuration options.\n')
     +  where '✓ Created .env.sample with detailed configuration options.\n' = &lt;Result okay&gt;.stdout
     +  and   '✓ Created .env.sample with detailed configuration options.\n' = &lt;Result okay&gt;.stdout</failure></testcase><testcase classname="tests.integration.test_commands.TestEndToEndScenarios" name="test_full_workflow" time="0.001"><skipped type="pytest.skip" message="Skipping slow test (use --run-slow to run)">/opt/aeo/mgit/tests/integration/test_commands.py:289: Skipping slow test (use --run-slow to run)</skipped></testcase><testcase classname="tests.unit.test_git.TestGitOperations" name="test_git_clone_success" time="0.006" /><testcase classname="tests.unit.test_git.TestGitOperations" name="test_git_clone_failure" time="0.005" /><testcase classname="tests.unit.test_git.TestGitOperations" name="test_git_pull_success" time="0.008" /><testcase classname="tests.unit.test_git.TestGitOperations" name="test_concurrent_git_operations" time="0.006" /><testcase classname="tests.unit.test_git.TestGitHelpers" name="test_is_git_repository_valid" time="0.002" /><testcase classname="tests.unit.test_git.TestGitHelpers" name="test_get_git_remote_url" time="0.002" /><testcase classname="tests.unit.test_git.TestGitHelpers" name="test_sanitize_repo_name" time="0.000" /><testcase classname="tests.unit.test_git.TestGitURLHandling" name="test_parse_azure_devops_url" time="0.001" /><testcase classname="tests.unit.test_git.TestGitURLHandling" name="test_embed_pat_in_url" time="0.000" /><testcase classname="tests.unit.test_git.TestGitURLHandling" name="test_detect_git_provider[azure-urls0]" time="0.001" /><testcase classname="tests.unit.test_git.TestGitURLHandling" name="test_detect_git_provider[github-urls1]" time="0.001" /><testcase classname="tests.unit.test_git.TestGitURLHandling" name="test_detect_git_provider[bitbucket-urls2]" time="0.001" /><testcase classname="tests.unit.test_git.TestGitBranchOperations" name="test_get_current_branch" time="0.006" /><testcase classname="tests.unit.test_git.TestGitBranchOperations" name="test_checkout_branch" time="0.005" /><testcase classname="tests.unit.test_git.TestGitManager" name="test_git_manager_initialization" time="0.001" /><testcase classname="tests.unit.test_git.TestGitManager" name="test_git_manager_clone_all" time="0.002" /><testcase classname="tests.unit.test_git.TestGitPatterns" name="test_unit_test_pattern" time="0.001" /><testcase classname="tests.unit.test_git.TestGitPatterns" name="test_integration_test_pattern" time="0.001" /><testcase classname="tests.unit.test_git.TestGitPatterns" name="test_slow_test_pattern" time="0.000"><skipped type="pytest.skip" message="Skipping slow test (use --run-slow to run)">/opt/aeo/mgit/tests/unit/test_git.py:293: Skipping slow test (use --run-slow to run)</skipped></testcase><testcase classname="tests.unit.test_git.TestGitPatterns" name="test_async_pattern" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderAbstraction" name="test_provider_interface" time="0.000" /><testcase classname="tests.unit.test_providers.TestProviderAbstraction" name="test_provider_registry" time="0.000" /><testcase classname="tests.unit.test_providers.TestAzureDevOpsProvider" name="test_azure_authentication" time="0.002" /><testcase classname="tests.unit.test_providers.TestAzureDevOpsProvider" name="test_azure_list_repositories" time="0.003" /><testcase classname="tests.unit.test_providers.TestAzureDevOpsProvider" name="test_azure_get_repository" time="0.003" /><testcase classname="tests.unit.test_providers.TestAzureDevOpsProvider" name="test_azure_repository_url_formatting" time="0.001" /><testcase classname="tests.unit.test_providers.TestGitHubProvider" name="test_github_authentication" time="0.001" /><testcase classname="tests.unit.test_providers.TestGitHubProvider" name="test_github_list_repositories" time="0.002" /><testcase classname="tests.unit.test_providers.TestGitHubProvider" name="test_github_pagination" time="0.002" /><testcase classname="tests.unit.test_providers.TestBitbucketProvider" name="test_bitbucket_authentication" time="0.001" /><testcase classname="tests.unit.test_providers.TestBitbucketProvider" name="test_bitbucket_workspace_repositories" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderFactory" name="test_create_provider_azure" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderFactory" name="test_create_provider_github" time="0.000" /><testcase classname="tests.unit.test_providers.TestProviderFactory" name="test_create_provider_invalid" time="0.000" /><testcase classname="tests.unit.test_providers.TestProviderAuthentication" name="test_provider_authentication_methods[azure-auth_config0]" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderAuthentication" name="test_provider_authentication_methods[github-auth_config1]" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderAuthentication" name="test_provider_authentication_methods[bitbucket-auth_config2]" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderAuthentication" name="test_authentication_failure_handling" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderURLHandling" name="test_normalize_repository_urls" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderURLHandling" name="test_extract_repository_info" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderFeatures" name="test_azure_project_support" time="0.000"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/unit/test_providers.py, line 324&#10;      def test_azure_project_support(self, azure_provider):&#10;E       fixture 'azure_provider' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/unit/test_providers.py::&lt;event_loop&gt;, tests/unit/test_providers.py::TestProviderFeatures::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/unit/test_providers.py:324&quot;">file /opt/aeo/mgit/tests/unit/test_providers.py, line 324
      def test_azure_project_support(self, azure_provider):
E       fixture 'azure_provider' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/unit/test_providers.py::&lt;event_loop&gt;, tests/unit/test_providers.py::TestProviderFeatures::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/unit/test_providers.py:324</error></testcase><testcase classname="tests.unit.test_providers.TestProviderFeatures" name="test_github_organization_support" time="0.000"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/unit/test_providers.py, line 335&#10;      def test_github_organization_support(self, github_provider):&#10;E       fixture 'github_provider' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/unit/test_providers.py::&lt;event_loop&gt;, tests/unit/test_providers.py::TestProviderFeatures::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/unit/test_providers.py:335&quot;">file /opt/aeo/mgit/tests/unit/test_providers.py, line 335
      def test_github_organization_support(self, github_provider):
E       fixture 'github_provider' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/unit/test_providers.py::&lt;event_loop&gt;, tests/unit/test_providers.py::TestProviderFeatures::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/unit/test_providers.py:335</error></testcase><testcase classname="tests.unit.test_providers.TestProviderFeatures" name="test_bitbucket_workspace_support" time="0.000"><error message="failed on setup with &quot;file /opt/aeo/mgit/tests/unit/test_providers.py, line 346&#10;      def test_bitbucket_workspace_support(self, bitbucket_provider):&#10;E       fixture 'bitbucket_provider' not found&#10;&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/unit/test_providers.py::&lt;event_loop&gt;, tests/unit/test_providers.py::TestProviderFeatures::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/opt/aeo/mgit/tests/unit/test_providers.py:346&quot;">file /opt/aeo/mgit/tests/unit/test_providers.py, line 346
      def test_bitbucket_workspace_support(self, bitbucket_provider):
E       fixture 'bitbucket_provider' not found
&gt;       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, async_mock_subprocess, benchmark_timer, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capture_logs, clean_env, cli_runner, config_dir, config_file, cov, doctest_namespace, event_loop, event_loop_policy, isolated_cli_runner, mock_azure_client, mock_env_vars, mock_git_repo, mock_projects, mock_repositories, mock_sleep, monkeypatch, multiple_git_repos, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_config, skip_slow_tests, temp_dir, temp_home_dir, test_urls, tests/unit/test_providers.py::&lt;event_loop&gt;, tests/unit/test_providers.py::TestProviderFeatures::&lt;event_loop&gt;, tests::&lt;event_loop&gt;, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/opt/aeo/mgit/tests/unit/test_providers.py:346</error></testcase><testcase classname="tests.unit.test_providers.TestProviderPatterns" name="test_provider_caching" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderPatterns" name="test_provider_retry_logic" time="0.001" /><testcase classname="tests.unit.test_providers.TestProviderPatterns" name="test_provider_error_handling" time="0.000" /><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_embed_pat_in_url_https" time="0.001" /><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_embed_pat_in_url_already_has_auth" time="0.001" /><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_embed_pat_in_url_ssh" time="0.001"><failure message="AssertionError: assert '//PersonalAc...user/repo.git' == 'git@github.com:user/repo.git'&#10;  &#10;  - git@github.com:user/repo.git&#10;  + //PersonalAccessToken:test-pat-token@None/git@github.com:user/repo.git">E   AssertionError: assert '//PersonalAc...user/repo.git' == 'git@github.com:user/repo.git'
      
      - git@github.com:user/repo.git
      + //PersonalAccessToken:test-pat-token@None/git@github.com:user/repo.git</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_basic" time="0.001" /><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_special_chars" time="0.001"><failure message="AssertionError: assert 'repo' == 'my-repo'&#10;  &#10;  - my-repo&#10;  + repo">E   AssertionError: assert 'repo' == 'my-repo'
      
      - my-repo
      + repo</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_whitespace" time="0.001"><failure message="AssertionError: assert 'my_repo' == 'my-repo'&#10;  &#10;  - my-repo&#10;  ?   ^&#10;  + my_repo&#10;  ?   ^">E   AssertionError: assert 'my_repo' == 'my-repo'
      
      - my-repo
      ?   ^
      + my_repo
      ?   ^</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_dots" time="0.001"><failure message="AssertionError: assert '.repo' == 'repo'&#10;  &#10;  - repo&#10;  + .repo&#10;  ? +">E   AssertionError: assert '.repo' == 'repo'
      
      - repo
      + .repo
      ? +</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_multiple_dashes" time="0.001"><failure message="AssertionError: assert 'my--repo' == 'my-repo'&#10;  &#10;  - my-repo&#10;  + my--repo&#10;  ?   +">E   AssertionError: assert 'my--repo' == 'my-repo'
      
      - my-repo
      + my--repo
      ?   +</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[-repo]" time="0.001"><failure message="AssertionError: assert '' == 'repo'&#10;  &#10;  - repo">E   AssertionError: assert '' == 'repo'
      
      - repo</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[.-repo]" time="0.001"><failure message="AssertionError: assert '.' == 'repo'&#10;  &#10;  - repo&#10;  + .">E   AssertionError: assert '.' == 'repo'
      
      - repo
      + .</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[--repo]" time="0.001"><failure message="AssertionError: assert '-' == 'repo'&#10;  &#10;  - repo&#10;  + -">E   AssertionError: assert '-' == 'repo'
      
      - repo
      + -</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[CON-CON_]" time="0.001"><failure message="AssertionError: assert 'CON' == 'CON_'&#10;  &#10;  - CON_&#10;  ?    -&#10;  + CON">E   AssertionError: assert 'CON' == 'CON_'
      
      - CON_
      ?    -
      + CON</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[PRN-PRN_]" time="0.001"><failure message="AssertionError: assert 'PRN' == 'PRN_'&#10;  &#10;  - PRN_&#10;  ?    -&#10;  + PRN">E   AssertionError: assert 'PRN' == 'PRN_'
      
      - PRN_
      ?    -
      + PRN</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[AUX-AUX_]" time="0.001"><failure message="AssertionError: assert 'AUX' == 'AUX_'&#10;  &#10;  - AUX_&#10;  ?    -&#10;  + AUX">E   AssertionError: assert 'AUX' == 'AUX_'
      
      - AUX_
      ?    -
      + AUX</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[NUL-NUL_]" time="0.001"><failure message="AssertionError: assert 'NUL' == 'NUL_'&#10;  &#10;  - NUL_&#10;  ?    -&#10;  + NUL">E   AssertionError: assert 'NUL' == 'NUL_'
      
      - NUL_
      ?    -
      + NUL</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[COM1-COM1_]" time="0.001"><failure message="AssertionError: assert 'COM1' == 'COM1_'&#10;  &#10;  - COM1_&#10;  ?     -&#10;  + COM1">E   AssertionError: assert 'COM1' == 'COM1_'
      
      - COM1_
      ?     -
      + COM1</failure></testcase><testcase classname="tests.unit.test_utils.TestHelperFunctions" name="test_sanitize_repo_name_edge_cases[LPT1-LPT1_]" time="0.001"><failure message="AssertionError: assert 'LPT1' == 'LPT1_'&#10;  &#10;  - LPT1_&#10;  ?     -&#10;  + LPT1">E   AssertionError: assert 'LPT1' == 'LPT1_'
      
      - LPT1_
      ?     -
      + LPT1</failure></testcase><testcase classname="tests.unit.test_utils.TestAsyncHelpers" name="test_async_executor_success" time="0.102" /><testcase classname="tests.unit.test_utils.TestAsyncHelpers" name="test_async_executor_with_semaphore" time="0.303" /><testcase classname="tests.unit.test_utils.TestAsyncHelpers" name="test_async_executor_error_handling" time="0.002"><failure message="NameError: name 'asyncio' is not defined">E   NameError: name 'asyncio' is not defined</failure></testcase><testcase classname="tests.unit.test_utils.TestPathUtilities" name="test_ensure_path_exists" time="0.001" /><testcase classname="tests.unit.test_utils.TestPathUtilities" name="test_resolve_relative_path" time="0.001" /><testcase classname="tests.unit.test_utils.TestPathUtilities" name="test_path_normalization" time="0.001"><failure message="AssertionError: assert '$' not in '$HOME/projects/repo'&#10;  &#10;  '$' is contained here:&#10;    $HOME/projects/repo&#10;  ? +">E   AssertionError: assert '$' not in '$HOME/projects/repo'
      
      '$' is contained here:
        $HOME/projects/repo
      ? +</failure></testcase><testcase classname="tests.unit.test_utils.TestConfigurationHelpers" name="test_merge_configs" time="0.001" /><testcase classname="tests.unit.test_utils.TestConfigurationHelpers" name="test_validate_url" time="0.001"><failure message="AssertionError: assert not True&#10; +  where True = &lt;built-in method startswith of str object at 0x7fb8f73a2eb0&gt;(('http://', 'https://'))&#10; +    where &lt;built-in method startswith of str object at 0x7fb8f73a2eb0&gt; = 'https://'.startswith">E   AssertionError: assert not True
     +  where True = &lt;built-in method startswith of str object at 0x7fb8f73a2eb0&gt;(('http://', 'https://'))
     +    where &lt;built-in method startswith of str object at 0x7fb8f73a2eb0&gt; = 'https://'.startswith</failure></testcase></testsuite></testsuites>